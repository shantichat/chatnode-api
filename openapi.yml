openapi: 3.1.0
info:
  title: ChatNode API
  description: REST API prototype (unstalbe, still in active development)
  version: 0.1.0
servers:
  - url: https://shantichat.com/api/v1
paths:
  /state:
    get:
      summary: "Server state"
      description: "Information about server parameters. Can be used as ping"
      operationId: getServerState
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                - type: object
                  properties:
                    time:
                      required: true
                      type: string
                      format: date-time
                      example: "2038-01-19 03:14:00.000"
                    extensions:
                      required: true
                      type: array
                      items:
                        type: string
                        example: ["icon", "msgreactions"]
  /users:
    get:
      summary: "Search users"
      description: ""
      operationId: getUsers
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{userUid}:
    get:
      summary: "User information"
      description: ""
      operationId: getUserInfo
      tags: [ "core" ]
      parameters:
        - $ref: "#/components/parameters/UserUid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/me:
    get:
      summary: "Returns self contact"
      description: ""
      operationId: getMyInfo
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /invites/:
    get:
      summary: "Invitation codes"
      description: "Used and unused invitation codes"
      operationId: getInvites
      tags: [ "invites" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
parameters:
  UserUid:
    name: userUid
    in: path
    required: true
    schema:
      type: string
      format: nanoid
      example: "njbusD52k6YoRG346tPgD"
components:
  schemas:
    NewEntity:
      type: object
      properties: {}
    AliveEntity:
      type: object
      properties:
        uid:
          type: string
          format: nanoid
          example: 'njbusD52k6YoRG346tPgD'
          readOnly: true
          required: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: true
        updated_at:
          type: string
          format: date-time
          example: "2020-07-10 10:10:00.000"
          readOnly: true
          required: true
    DeletedEntity:
      allOf:
        - $ref: '#/components/schemas/AliveEntity'
        - type: object
          properties:
            deleted:
              type: boolean
              example: true
              readOnly: true
              required: true
    BaseEntity:
      title: 'Parent of most important objects'
      oneOf:
        - $ref: '#/components/schemas/NewEntity'
        - $ref: '#/components/schemas/AliveEntity'
        - $ref: '#/components/schemas/DeletedEntity'
    User:
      title: 'User object'
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            name:
              type: string
              example: "Thomas A. Anderson"
            timezone:
              type: string
              example: "America/Chicago"
              required: false
            ext:
              type:
                object:
                properties:
                  icon:
                    type: string
                    readOnly: true
                    required: false
                  bot:
                    type: string
                    readOnly: true
                    required: false
    Invite:
      title: 'Invite object'
      type: object
      properties:
        code:
          type: string
          example: "yisEysLofqxVwEYbf6gxbNg13jfcaoxZ"
          readOnly: true
          required: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: true
        used_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: false
        invitee:
          type: string
          format: nanoid
          example: "njbusD52k6YoRG346tPgD"
          readOnly: true
          required: false
