openapi: 3.1.0
info:
  title: ChatNode API
  description: REST API prototype (unstalbe, still in active development)
  version: 0.1.0
servers:
  - url: https://shantichat.com
paths:
  /api/v1/state:
    get:
      summary: "Server state"
      description: "Information about server parameters. Can be used as ping"
      operationId: getServerState
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    required: true
                    type: string
                    format: date-time
                    example: "2038-01-19 03:14:00.000"
                  extensions:
                    required: true
                    type: array
                    items:
                      type: string
                      example: ["icon", "msgreactions"]
  /api/v1/users:
    get:
      summary: "Search users"
      description: ""
      operationId: getUsers
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/v1/users/{userUid}:
    get:
      summary: "User information"
      description: ""
      operationId: getUserInfo
      tags: [ "core" ]
      parameters:
        - $ref: "#/components/parameters/userUid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/users/me:
    get:
      summary: "Returns self contact"
      description: ""
      operationId: getMyInfo
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/invites/:
    get:
      summary: "Invitation codes"
      description: "Used and unused invitation codes"
      operationId: getInvites
      tags: [ "invites" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invite"
components:
  parameters:
    userUid:
      name: userUid
      in: path
      required: true
      schema:
        type: string
        format: nanoid
        example: "njbusD52k6YoRG346tPgD"
  schemas:
    Base:
      title: "Parent of most important objects"
      oneOf:
        - type: object
          description: "New object"
          properties: {}
        - type: object
          description: "Alive object"
          properties:
            uid:
              type: string
              format: nanoid
              example: "njbusD52k6YoRG346tPgD"
              readOnly: true
              required: true
              allowEmptyValue: false
              nullable: false
            created_at:
              type: string
              format: date-time
              example: "1999-03-31 15:00:00.000"
              readOnly: true
              required: true
            updated_at:
              type: string
              format: date-time
              example: "2020-07-10 10:10:00.000"
              readOnly: true
              required: true
          required:
          - uid
          - created_at
          - updated_at
        - type: object
          description: "Deleted object"
          properties:
            uid:
              type: string
              format: nanoid
              example: "njbusD52k6YoRG346tPgD"
              readOnly: true
              required: true
            created_at:
              type: string
              format: date-time
              example: "1999-03-31 15:00:00.000"
              readOnly: true
              required: true
            updated_at:
              type: string
              format: date-time
              example: "2020-07-10 10:10:00.000"
              readOnly: true
              required: true
            deleted:
              type: boolean
              example: true
              readOnly: true
              required: true
          required:
          - uid
          - created_at
          - updated_at
          - deleted
    User:
      title: "User object"
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            name:
              type: string
              example: "Thomas A. Anderson"
            timezone:
              type: string
              example: "America/Chicago"
              required: false
            ext:
              type: object
              properties:
                icon:
                  type: string
                  readOnly: true
                  required: false
                bot:
                  type: string
                  readOnly: true
                  required: false
    Invite:
      title: 'Invite object'
      type: object
      properties:
        code:
          type: string
          example: "yisEysLofqxVwEYbf6gxbNg13jfcaoxZ"
          readOnly: true
          required: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: true
        used_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: false
        invitee:
          type: string
          format: nanoid
          example: "njbusD52k6YoRG346tPgD"
          readOnly: true
          required: false
      required:
      - code
      - created_at
      - used_at
      - invitee