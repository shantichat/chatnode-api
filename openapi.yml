openapi: 3.1.0
info:
  title: ChatNode API
  description: REST API prototype (unstalbe, still in active development)
  version: 0.1.0
servers:
  - url: https://shantichat.com
paths:
  /api/v1/state:
    get:
      summary: "Server state"
      description: "Information about server parameters. Alse can be used as ping"
      operationId: getServerState
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    required: true
                    type: string
                    format: date-time
                    example: "2038-01-19 03:14:00.000"
                  extensions:
                    required: true
                    type: array
                    items:
                      type: string
                      example: ["msgreactions"]
  /api/v1/users:
    get:
      summary: "Search users"
      description: "Users lookup"
      operationId: getUsers
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/v1/users/{userUid}:
    get:
      summary: "User information"
      description: "Full information about user"
      operationId: getUserInfo
      tags: [ "core" ]
      parameters:
        - $ref: "#/components/parameters/userUid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/users/me:
    get:
      summary: "Returns self contact"
      description: "Full information about self"
      operationId: getMyInfo
      tags: [ "core" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/invites/:
    get:
      summary: "Invitation codes"
      description: "Used and unused invitation codes"
      operationId: getInvites
      tags: [ "invites" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invite"
  /api/v1/invites/preview/:
    get:
      summary: "Invitation preview"
      description: "Information about invitation accectablility and invitee"
      operationId: getInvites
      tags: [ "invites" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvitePreview"
components:
  parameters:
    userUid:
      name: userUid
      in: path
      required: true
      schema:
        type: string
        format: nanoid
        example: "njbusD52k6YoRG346tPgD"
  schemas:
    BaseEntity:
      title: "Base object"
      type: object
      properties:
        uid:
          type: string
          format: nanoid
          example: "njbusD52k6YoRG346tPgD"
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: "2020-07-10 10:10:00.000"
          readOnly: true
      required:
        - uid
        - created_at
        - updated_at
    DeletedEntity:
      title: "Deleted object"
      type: object
      properties:
          uid:
            type: string
            format: nanoid
            example: "njbusD52k6YoRG346tPgD"
            readOnly: true
          updated_at:
            type: string
            format: date-time
            example: "2020-07-10 10:10:00.000"
            readOnly: true
          deleted:
            type: boolean
            example: true
            readOnly: true
            required: true
      required:
        - uid
        - updated_at
        - deleted
    User:
      anyOf:
        - title: User object
          allOf:
            - $ref: "#/components/schemas/BaseEntity"
            - type: object
              properties:
                name:
                  type: string
                  example: "Thomas A. Anderson"
                icon:
                  type: string
                  example: "https://shantichat.github.io/avacats/120x120/99.jpg"
                  readOnly: true
                  required: true
                timezone:
                  type: string
                  example: "America/Chicago"
                ext:
                  type: object
                  properties:
                    icon:
                      type: string
                      readOnly: true
                    bot:
                      type: boolean
                      readOnly: true
              required:
                - name
        - $ref: "#/components/schemas/DeletedEntity"
    Invite:
      title: Invite information
      type: object
      properties:
        code:
          type: string
          example: "yisEysLofqxVwEYbf6gxbNg13jfcaoxZ"
          readOnly: true
          required: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: true
        used_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
          required: false
        invitee:
          type: string
          format: nanoid
          example: "njbusD52k6YoRG346tPgD"
          readOnly: true
          required: false
      required:
        - code
        - created_at
    InvitePreview:
      tilte: Inite preivew
      type: object
      properties:
        inviter:
          $ref: "#/components/schemas/User"
        is_used:
          type: boolean
          example: false
          readOnly: true
          required: true
