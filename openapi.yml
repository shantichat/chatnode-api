openapi: 3.1.0
info:
  title: ChatNode API
  description: REST API prototype (unstalbe, still in active development)
  version: 0.1.0

servers:
  - url: https://shantichat.com/api/v1

paths:
  /contacts:
    get:
      summary: "Returns list of my contacts"
      description: ''
      operationId: getContacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /contacts/{userUid}:
    get:
      summary: "Returns contact by UID"
      description: ''
      operationId: getContactInfo
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: nanoid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /contacts/{userUid}/icon:
    get:
      summary: "Returns contact icon in full resolution"
      description: ''
      operationId: getContactIcon
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: nanoid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'

  /contacts/me:
    get:
      summary: "Returns self contact"
      description: ''
      operationId: getMyInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /contacts/me/icon:
    get:
      summary: "Returns self icon in full resolution"
      description: ''
      operationId: getMyIcon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
    delete:
      summary: "Remove self icon"
      description: ''
      operationId: deleteMyIcon
      responses:
        '200':
          description: OK

#  /media:
#    get:
#      summary: "Returns list of my media"
#
#  /media/{mediaUid}:
#    get:
#      summary: "Returns media by UID"
#

components:
  schemas:

    BaseEntity:
      title: 'Parent of most important objects'
      type: object
      properties:
        uid:
          type: string
          format: nanoid
          example: 'njbusD52k6YoRG346tPgD'
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: "1999-03-31 15:00:00.000"
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: "2020-07-10 10:10:00.000"
          readOnly: true
        deleted:
          type: boolean
          example: false
          allowEmptyValue: true
          readOnly: true

    Image:
      title: 'Image for preview'
      type: object
      properties:
        url:
          type: string
          example: 'https://shantichat.com/data/V1StGXR8_Z5jdHi6B-myT/white-rabbit.png'
          readOnly: true
        width:
          type: int
          example: 128
          readOnly: true
        height:
          type: int
          example: 128
          readOnly: true
        blurhash:
          type: string
          example: 'LEHV6nWB2yk8pyo0adR*.7kCMdnj'
          allowEmptyValue: true
          readOnly: true
      required:
        - url
        - width
        - height

    User:
      title: 'User object'
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            name:
              type: string
              example: "Thomas A. Anderson"
            description:
              type: string
              example: "The One"
              allowEmptyValue: true
            icon:
              $ref: '#/components/schemas/Image'
            timezone:
              type: string
              example: "America/Chicago"
              allowEmptyValue: true
            last_online_at:
              type: string
              format: date-time
              example: "2020-07-10 15:00:00.000"
              allowEmptyValue: true
              readOnly: true

# TODO:

#  /conversations:
#  /conversations/{conversationUid}:
#  /conversations/{conversationUid}/media:
#  /conversations/{conversationUid}/participants:
#  /conversations/{conversationUid}/participants/{userUid}:
#  /conversations/{conversationUid}/messages:
#  /conversations/{conversationUid}/messages/{messageUid}:
#  /conversations/{conversationUid}/messages/{messageUid}/read:
#  /conversations/{conversationUid}/messages/{messageUid}/reactions:

#  /invitations/invite:
#
#// ## Projects
#// /api/v1/spaces
#// /api/v1/spaces/[uid]
#//
#// /api/v1/spaces/[uid]/members
#// /api/v1/spaces/[uid]/members/me
#// /api/v1/spaces/[uid]/members/[uid]
#//
#// /api/v1/spaces/[uid]/conversations
#// /api/v1/spaces/[uid]/conversations/[uid]
#//
#// /api/v1/spaces/[uid]/conversations/[uid]/media
#//
#// /api/v1/spaces/[uid]/conversations/[uid]/participants
#// /api/v1/spaces/[uid]/conversations/[uid]/participants/[uid]
#//
#// /api/v1/spaces/[uid]/conversations/[uid]/messages
#// /api/v1/spaces/[uid]/conversations/[uid]/messages/[uid]
#// /api/v1/spaces/[uid]/conversations/[uid]/messages/[uid]/read
#// /api/v1/spaces/[uid]/conversations/[uid]/messages/[uid]/reactions
